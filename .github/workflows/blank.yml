name: CI

on:
  push:
    branches:
      - livros
  pull_request:
    branches:
      - livros

jobs:
  build:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Instalar Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Verificar instalação do Poetry
        run: poetry --version

      - name: Criar arquivo .env
        run: |
          echo "DEBUG=True" >> .env
          echo "SECRET_KEY=your-secret-key" >> .env
          echo "DATABASE_URL=postgresql://postgres:postgres@postgres:5432/postgres" >> .env
          echo "ALLOWED_HOSTS=*" >> .env

      - name: Baixar wait-for-it.sh
        run: |
          curl -sSL https://github.com/vishnubob/wait-for-it/blob/master/wait-for-it.sh -o wait-for-it.sh
          chmod +x wait-for-it.sh

      - name: Esperar pelo PostgreSQL
        run: ./wait-for-it.sh postgres:5432 --timeout=30 --strict -- echo "PostgreSQL está pronto"

      - name: Instalar dependências com Poetry
        run: poetry install --no-interaction --no-root

      - name: Preparar banco de dados
        run: poetry run python manage.py migrate

      - name: Rodar flake8
        run: poetry run flake8

      - name: Executar testes
        run: poetry run pytest

